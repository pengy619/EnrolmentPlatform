@using EnrolmentPlatform.Project.DTO.Product;
@{
    ViewBag.Title = "农产品管理";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var categories = ViewBag.Categories as List<ProductCategoriesDto>;
    var productStatus = ViewBag.ProductStatus as List<KeyValuePair<int, string>>;
    var saleModels = ViewBag.SaleModels as List<KeyValuePair<int, string>>;
}

<div class="main-wrap">
    <div class="panel">
        <div class="panel-title">
            <div class="layui-form">
                <div class="layui-form-item ">
                    <label class="layui-form-label">状态</label>
                    <div class="layui-input-block">
                        <input type="radio" name="productStatus" value="" title="全部" lay-filter="status_search" checked>
                        @foreach (var item in productStatus)
                        {
                            if (!item.Key.Equals((int)ProductStatusEnum.Draft))
                            {
                                <input type="radio" name="productStatus" value="@item.Key" lay-filter="status_search" title="@item.Value">
                            }
                        }
                    </div>
                </div>
                <div class="layui-form-item ">
                    <label class="layui-form-label">农产品分类</label>
                    <div class="layui-input-inline">
                        <select name="productCategory" lay-filter="sel_search">
                            <option value=""></option>
                            @foreach (var item in categories)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
                    <label class="layui-form-label">销售模式</label>
                    <div class="layui-input-inline">
                        <select name="saleModel" lay-filter="sel_search">
                            <option value=""></option>
                            @foreach (var item in saleModels)
                            {
                                <option value="@item.Key">@item.Value</option>
                            }
                        </select>
                    </div>
                    <label class="layui-form-label">供应商</label>
                    <div class="layui-input-inline">
                        <input type="text" name="supplierName" id="supplierName" placeholder="供应商" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-form-item ">
                    <label class="layui-form-label">农产品名称</label>
                    <div class="layui-input-inline">
                        <input type="text" name="productName" id="productName" placeholder="农产品名称" autocomplete="off" class="layui-input">
                    </div>
                    <label class="layui-form-label">品种</label>
                    <div class="layui-input-inline">
                        <input type="text" name="varietiesName" id="varietiesName" placeholder="品种" autocomplete="off" class="layui-input">
                    </div>
                    <label class="layui-form-label">产品编号</label>
                    <div class="layui-input-inline">
                        <input type="text" id="projectNumber" placeholder="产品编号" autocomplete="off" class="layui-input">
                    </div>
                    <button class="layui-btn layui-btn-warm" data-type="reload">查询</button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <button class="layui-btn layui-btn-warm layui-btn-sm" data-type="onSale">批量审核</button>
            <button class="layui-btn layui-btn-default layui-btn-sm" data-type="onSales">上架</button>
            <button class="layui-btn layui-btn-default layui-btn-sm" data-type="offSale">下架</button>
            <button class="layui-btn layui-btn-primary layui-btn-sm" data-type="delete">删除</button>
            <table id="product-table" lay-filter="table"></table>
        </div>
    </div>
</div>
<!-- 弹出层 -->
<div id="audit-btn-modal" style="display:none">
    <div class="layui-form big-label">
        <div class="layui-form-item">
            <label class="layui-form-label">审核结果</label>
            <div class="layui-input-inline">
                <input type="radio" name="result_checking" lay-filter="result_checking" value="1" title="审核通过" checked>
                <input type="radio" name="result_checking" lay-filter="result_checking" value="2" title="审核拒绝">
            </div>
        </div>
        <div class="layui-form-item ">
            <label class="layui-form-label">说明</label>
            <div class="layui-input-inline">
                <textarea id="desc" placeholder="请输入内容" class="layui-textarea" style="width:300px; resize:none;">产品合格，准许上架</textarea>
            </div>
        </div>
    </div>
</div>
<script type="text/html" id="tableTool">
    <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看</a>
</script>
<script>
    var searchUrl = '@Url.Action("ProductList", "Specialty",new { area = "Product" })';
    var onSaleUrl = '@Url.Action("ProductOnSale", "Specialty",new { area = "Product" })';
    var offSaleUrl = '@Url.Action("ProductOffSale", "Specialty",new { area = "Product" })';
    var onDelUrl = '@Url.Action("DeleteProduct", "Specialty",new { area = "Product" })';
    var isSubmit = true;
    var defaltStatus = 1;

    layui.use(['jquery', 'table', 'layer', 'form'], function () {
        var table = layui.table;
        var form = layui.form;
        //实例表格
        var tableOptions = {
            elem: '#product-table'
            , skin: 'line'
            , limit: 20
            , url:searchUrl//数据
            , page: true //开启分页
            , cols: [[ //表头
                { type: 'checkbox', fixed: 'left' }
                //, { field: 'ProductNumber', title: '产品编号', sort: true, minWidth: 150 }
                , { field: 'CateName', title: '农产品分类', sort: true, minWidth: 120 }
                , { field: 'ProductName', title: '农产品名称', sort: true, minWidth: 110 }
                , { field: 'VarietiesName', title: '品种', minWidth: 120 }
                , { field: 'SpecsStr', title: '规格', minWidth: 120 }
                , { field: 'SaleslUnit', title: '单位', width: 60 }
                , { field: 'MinMarkPriceStr', title: '价格', sort: true, width: 100 }
                , { field: 'Inventory', title: '库存数', width: 80 }
                , { field: 'SoldQuantity', title: '已售', width: 80 }
                , { field: 'SaleQuantity', title: '可售', width: 80 }
                , { field: 'EnterpriseName', title: '供应商', sort: true, width: 150 }
                , { field: 'SalesModelStr', title: '销售模式', width: 100 }
                , { field: 'StatusStr', title: '状态', width: 100 }
                , { title: '操作', toolbar: '#tableTool', Width: 80 }
            ]]
        }

        table.render(tableOptions);

        var $ = layui.$, active = {
            reload: function () {
                //执行重载
                table.reload('product-table', {
                    page: {
                        curr: 1 //重新从第 1 页开始
                    }
                    , where: {
                        Status: $("input[name=productStatus]:checked").val(),
                        ProductCategoriesId: $("select[name=productCategory]").val(),
                        SalesModel: $("select[name=saleModel]").val(),
                        ProductName: $.trim($('#productName').val()),
                        VarietiesName: $.trim($('#varietiesName').val()),
                        SupplierName: $.trim($('#supplierName').val()),
                        Number: $.trim($('#projectNumber').val())
                    }
                });
            },
            onSale: function () {
                var checkStatus = table.checkStatus('product-table')
                    , data = checkStatus.data;
                if (data.length == 0) return false;

                var productIds = [];
                var isOption = true;
                for (var i = 0; i < data.length; i++) {
                    if (data[i].Status != "@((int)ProductStatusEnum.Checking)") {
                        isOption = false;
                        layer.msg("请勾选待审核的产品进行审核！");
                        break;
                    } else {
                        productIds.push(data[i].ProductId);
                    }
                }
                if (isOption) {
                    layer.open({
                        type: 1,
                        title: '处理审核',
                        btn: ['确定', '取消'],
                        area: ['500px', '300px'], //宽高
                        content: $('#audit-btn-modal'),
                        yes: function (z_index) {
                            if (isSubmit) {
                                isSubmit = false;
                                $.ajax({
                                    url: onSaleUrl,
                                    type: 'Post',
                                    async: false,
                                    dataType: 'json',
                                    data: { ProductIds: productIds, Status: defaltStatus, Remark: $("#desc").val() },
                                    success: function (result) {
                                        isSubmit = true;
                                        if (result.IsSuccess) {
                                            table.reload('product-table');
                                            layer.msg(result.Info);
                                        }
                                        else {
                                            layer.msg(result.Info);
                                        }
                                        layer.close(z_index);
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                        isSubmit = true;
                                        layer.msg("系统出现异常，请联系管理员！");
                                    }
                                });
                            }
                        },
                        btn2: function () {
                        }
                    });
                }
            },
            onSales: function () {
                var checkStatus = table.checkStatus('product-table')
                    , data = checkStatus.data;
                if (data.length == 0) return false;

                var productIds = [];
                var isOption = true;
                for (var i = 0; i < data.length; i++) {
                    if (data[i].Status != "@((int)ProductStatusEnum.OffSale)") {
                        isOption = false;
                        layer.msg("请勾选已下架的产品进行强制上架！");
                        break;
                    } else {
                        productIds.push(data[i].ProductId);
                    }
                }
                if (isOption) {
                    layer.confirm('您确定要上架选中的农产品吗？', function (index) {
                        if (isSubmit) {
                            isSubmit = false;
                            $.ajax({
                                url: onSaleUrl,
                                type: 'Post',
                                async: false,
                                dataType: 'json',
                                data: { ProductIds: productIds, Status: 10, Remark: "管理后台强制上架" },
                                success: function (result) {
                                    isSubmit = true;
                                    if (result.IsSuccess) {
                                        table.reload('product-table');
                                    }
                                    else {
                                        layer.msg(result.Info);
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    isSubmit = true;
                                    layer.msg("系统出现异常，请联系管理员！");
                                }
                            });
                        }
                        layer.close(index);
                    });
                }
            },
            offSale: function () {
                var checkStatus = table.checkStatus('product-table')
                    , data = checkStatus.data;
                if (data.length == 0) return false;
                var productIds = [];
                var isOption = true;
                for (var i = 0; i < data.length; i++) {
                    if (data[i].Status != "@((int)ProductStatusEnum.OnSale)") {
                        isOption = false;
                        layer.msg("请勾选已上架的产品进行下架！");
                        break;
                    } else {
                        productIds.push(data[i].ProductId);
                    }
                }
                if (isOption) {
                    layer.confirm('您确定要下架选中的产品吗？', function (index) {
                        if (isSubmit) {
                            isSubmit = false;
                            $.ajax({
                                url: offSaleUrl,
                                type: 'Post',
                                async: false,
                                dataType: 'json',
                                data: { ProductIds: productIds },
                                success: function (result) {
                                    isSubmit = true;
                                    if (result.IsSuccess) {
                                        table.reload('product-table');
                                    }
                                    else {
                                        layer.msg(result.Info);
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    isSubmit = true;
                                    layer.msg("系统出现异常，请联系管理员！");
                                }
                            });
                        }
                        layer.close(index);
                    });
                }
            },
            delete: function () {
                var checkStatus = table.checkStatus('product-table')
                    , data = checkStatus.data;
                if (data.length == 0) return false;
                var productIds = [];
                for (var i = 0; i < data.length; i++) {
                    productIds.push(data[i].ProductId);
                }
                layer.confirm('您确定要删除选中的产品吗？', function (index) {
                    if (isSubmit) {
                        isSubmit = false;
                        $.ajax({
                            url: onDelUrl,
                            type: 'Post',
                            async: false,
                            dataType: 'json',
                            data: { ProductIds: productIds },
                            success: function (result) {
                                isSubmit = true;
                                if (result.IsSuccess) {
                                    table.reload('product-table');
                                }
                                else {
                                    layer.msg(result.Info);
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                isSubmit = true;
                                layer.msg("系统出现异常，请联系管理员！");
                            }
                        });
                    }
                    layer.close(index);
                });
            }
        };

        $('.panel .layui-btn').on('click', function () {
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });

        form.on('radio(result_checking)', function (data) {
            defaltStatus = data.value;
            $("#desc").val(defaltStatus == "1" ? "产品合格，准许上架" : "产品不合格，需要仔细校对");
        });

        form.on('radio(status_search)', function (data) {
            //执行重载
            table.reload('product-table', {
                page: {
                    curr: 1 //重新从第 1 页开始
                }
                , where: {
                    Status: $("input[name=productStatus]:checked").val(),
                    ProductCategoriesId: $("select[name=productCategory]").val(),
                    SalesModel: $("select[name=saleModel]").val(),
                    ProductName: $.trim($('#productName').val()),
                    VarietiesName: $.trim($('#varietiesName').val()),
                    SupplierName: $.trim($('#supplierName').val()),
                    Number: $.trim($('#projectNumber').val())
                }
            });
        });
        form.on('select(sel_search)', function (data) {
            //执行重载
            table.reload('product-table', {
                page: {
                    curr: 1 //重新从第 1 页开始
                }
                , where: {
                    Status: $("input[name=productStatus]:checked").val(),
                    ProductCategoriesId: $("select[name=productCategory]").val(),
                    SalesModel: $("select[name=saleModel]").val(),
                    ProductName: $.trim($('#productName').val()),
                    VarietiesName: $.trim($('#varietiesName').val()),
                    SupplierName: $.trim($('#supplierName').val()),
                    Number: $.trim($('#projectNumber').val())
                }
            });
        });

        table.on('tool(table)', function (obj) {
            var data = obj.data; //获得当前行数据
            var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
            var tr = obj.tr; //获得当前行 tr 的DOM对象
            if (layEvent === 'detail') {
                location.href = "@Url.Action("Detail", "Specialty")?productId=" + data.ProductId;
            }
        })

    })
</script>