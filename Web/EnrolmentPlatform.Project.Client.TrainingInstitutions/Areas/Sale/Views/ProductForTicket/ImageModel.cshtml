@using EnrolmentPlatform.Project.Infrastructure.EnumHelper;
@using EnrolmentPlatform.Project.DTO.Product;
@using EnrolmentPlatform.Project.DTO.Enums.Product;
@using EnrolmentPlatform.Project.DTO.Enums.Enterprise;
@using EnrolmentPlatform.Project.Infrastructure;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "票务销售图片模式";

    //列表数据
    List<ImageTikectListDto> list = ViewBag.DataList;
    var listJson = list.ToJson();

    List<string> amusementItems = ViewBag.AmusementItems;
    List<string> attractionsIds = ViewBag.AttractionsIds;
}
<div class="main-wrap">
    <div class="panel">
        <div class="panel-title mode">
            <div>
                <span>查看模式</span>
                <span>
                    <a href="@Url.Action("Index","ProductForTicket",new {area="Sale" })" title="列表模式">
                        <i class="iconfont icon-danlieliebiao"></i>
                    </a>
                    <a href="#" title="图片模式">
                        <i class="iconfont icon-shuanglieliebiao   pro-color"></i>
                    </a>
                </span>
            </div>
        </div>
        <div class="panel-title">
            <div class="ui-form">
                <div class="layui-form-item ">
                    <label class="layui-form-label">包含景点：</label>
                    <div class="layui-input-block">
                        @if (ViewBag.TicketSalesParam.AttractionsList != null)
                        {
                            foreach (var m in ViewBag.TicketSalesParam.AttractionsList)
                            {
                                <div class="ui-checkbox">
                                    <input type="checkbox" value="@m.Id" name="AttractionsId" @(attractionsIds != null && attractionsIds.Contains(m.Id.ToString()) ? "checked" : "")>
                                    <i class="iconfont checkicon"></i>@m.Value
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="layui-form-item ">
                    <label class="layui-form-label">游乐项目：</label>
                    <div class="layui-input-block">
                        @if (ViewBag.TicketSalesParam.AmusementItemsList != null)
                        {
                            foreach (var m in ViewBag.TicketSalesParam.AmusementItemsList)
                            {
                                <div class="ui-checkbox">
                                    <input type="checkbox" value="@m.Id" name="AmusementItem" @(amusementItems != null && amusementItems.Contains(m.Id.ToString()) ? "checked" : "")>
                                    <i class="iconfont checkicon"></i>@m.Value
                                </div>
                            }
                            if (ViewBag.TicketSalesParam.AmusementItemsList.Count > 7)
                            {
                                <div class="more">
                                    <span>更多</span>
                                    <i class="iconfont icon-zelvgongyonggengduo1"></i>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="layui-form">
                <div class="layui-form-item ">
                    <div class="layui-inline">
                        <label class="layui-form-label">产品名称：</label>
                        <div class="layui-input-inline">
                            <input type="text" id="ProductName" value="@(ViewBag.ProductName!=null?ViewBag.ProductName:"")" name="" autocomplete="off" class="layui-input">
                        </div>
                        <label class="layui-form-label" style="width: auto">供应商类别：</label>
                        <div class="layui-input-inline">
                            <select name="city" lay-verify="required">
                                <option value=""></option>
                                @foreach (var item in EnumDescriptionHelper.GetAllItemValueList<SupplierTypeEnum, int>())
                                {
                                    <option @(ViewBag.SupplierType != null && Convert.ToInt32(ViewBag.SupplierType) == item.Key ? "selected='selected'" : "") value="@item.Key">@item.Value</option>
                                }
                            </select>
                        </div>
                        <label class="layui-form-label">供应商：</label>
                        <div class="layui-input-inline">
                            <input type="text" id="SupplierName" value="@(ViewBag.SupplierName!=null?ViewBag.SupplierName:"")" name="SupplierName" autocomplete="off" class="layui-input" id="SupplierName" maxlength="100">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">产品编号：</label>
                        <div class="layui-input-inline">
                            <input type="text" value="@(ViewBag.ProductNumber!=null?ViewBag.ProductNumber:"")" name="" id="txtProductCode" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <button type="button" class="layui-btn layui-btn-warm" id="btnSearch">查询</button>
                </div>
            </div>
            @if (list != null && list.Count > 0)
            {
                for (int a = 0; a < list.Count; a++)
                {
                    var item = list[a];
                    <div class="list-box">
                        <div class="info-box img-mode-style">
                            <div class="img-box">
                                <img src="@item.Image" alt="">
                            </div>
                            <div class="text-box">
                                <h3>@item.ScenicSport</h3>
                                <div class="btn-box">
                                    <button class="layui-btn layui-btn-warm layui-btn-xs">@item.LevelName</button>
                                    <button class="layui-btn layui-btn-warm layui-btn-xs">@item.ScenicClassifyName</button>
                                </div>
                                <p>所在地址： @item.Address</p>
                                <p>
                                    开放时间：
                                    <span class="pro-color">@item.OpenTime</span>
                                </p>
                            </div>
                        </div>
                        <table id="sell-table@(a + 1)" lay-filter="table" class="tr-no-position"></table>
                    </div>
                }
            }
            else
            {
                <div style="height:300px;line-height: 200px; text-align: center;">暂无数据</div>
            }
            <div class="page" id="page"></div>
        </div>
    </div>
</div>
<input type="hidden" id="hidTableCount" value="@(list!=null ? list.Count : 0)" />
<div class="ui-shade"></div>
<div class="ui-drawer">
    <div class="drawer-header">
        提交订单
    </div>
    <div class="drawer-body">

    </div>
    <div class="drawer-footer">
        <div onclick="submit(this)">提交订单</div>
        <div onclick="cancel(this)">取消</div>
    </div>
</div>
<!--表格按钮模板-->
<script type="text/html" id="tableTool">
    <button class="layui-btn layui-btn-warm layui-btn-sm " lay-event="showTip">立即购买</button>
</script>
<!--表格产品名称模板-->
<script type="text/html" id="nameTpl">
    <a href="javascript:;" class="layui-table-link" lay-event="detail">{{d.ProductName}}</a>
</script>
<!--表格产品详情模板-->
<script type="text/html" id="detail">
    <tr class="tr-detail">
        <td colspan="10">
            <div style="padding:15px;">
                <div class="table-row-box">
                    <div class="info-cell no-padding">
                        <div class="row">
                            <div class="item">
                                <span class="label">包含景点</span>
                                {{# if(d.TicketDetail.Attractions){ }}
                                <span class="text">{{d.TicketDetail.Attractions}}</span>
                                {{# }else{ }}
                                <span class="text">-</span>
                                {{# } }}
                            </div>
                        </div>
                        <div class="row">
                            <div class="item">
                                <span class="label">包含游乐项目</span>
                                {{# if(d.TicketDetail.AmusementItem){ }}
                                <span class="text">{{d.TicketDetail.AmusementItem}}</span>
                                {{# }else{ }}
                                <span class="text">-</span>
                                {{# } }}
                            </div>
                        </div>
                        <div class="row">
                            <div class="item">
                                <span class="label">预定说明</span>
                                {{# if(d.TicketDetail.BookingInstructions){ }}
                                <span class="text">{{d.TicketDetail.BookingInstructions}}</span>
                                {{# }else{ }}
                                <span class="text">-</span>
                                {{# } }}
                            </div>
                        </div>
                        <div class="row">
                            <div class="item">
                                <span class="label">使用说明</span>
                                {{# if(d.TicketDetail.Instructions){ }}
                                <span class="text">{{d.TicketDetail.Instructions}}</span>
                                {{# }else{ }}
                                <span class="text">-</span>
                                {{# } }}
                            </div>
                        </div>
                        <div class="row">
                            <div class="item">
                                <span class="label">供应商</span>
                                <span class="text">此产品由 {{d.TicketDetail.SupplierName}} 提供，联系电话:{{d.TicketDetail.Phone}}</span>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <span onclick="closeDetail(this)">
                            收起 <i class="iconfont icon-zelvgongyonggengduo1"></i>
                        </span>
                    </div>
                </div>
            </div>
        </td>
    </tr>
</script>
<!--表格游玩日期模板-->
<script type="text/html" id="dateTpl">
    <span class="imitate-input" lay-event="openCalendar">{{d.PlayDate}}</span>
</script>
<!--表格价格模板-->
<script type="text/html" id="priceTpl">
    <span class="pro-color">￥{{d.Price.toFixed(2)}}</span>
</script>
<!--表格数量模板-->
<script type="text/html" id="countTpl">
    <div class="ui-counter" data-id="{{d.ProductId}}">
        <span class="reduce">-</span>
        <input type="text" value="1" />
        <span class="add">+</span>
    </div>
</script>
<!--右侧抽屉内容模板-->
<script type="text/html" id="drawerBodyTpl">
    <div class="info-cell no-padding">
        <div class="row">
            <div class="item">
                <span class="label">类别</span>
                <span class="text">{{d.TicketClassifyStr}}</span>
            </div>
        </div>
        <div class="row">
            <div class="item">
                <span class="label">产品名称</span>
                <span class="text">{{d.ProductName}}</span>
            </div>
        </div>
        <div class="row">
            <div class="item">
                <span class="label">票种</span>
                <span class="text">{{d.CateName}}</span>
            </div>
        </div>
        <div class="row">
            <div class="item">
                <span class="label">游玩日期</span>
                <span class="text">{{d.PlayDate}}</span>
            </div>
        </div>
        <div class="row">
            <div class="item">
                <span class="label">价格</span>
                <span class="text">￥{{d.Price.toFixed(2)}}</span>
            </div>
        </div>
        <div class="row">
            <div class="item">
                <span class="label">数量</span>
                <span class="text">{{d.Quantity}}</span>
            </div>
        </div>
        <div class="row">
            <div class="item">
                <span class="label">金额小计</span>
                <span class="text pro-color">￥{{(Number(d.Price)*Number(d.Quantity)).toFixed(2)}}</span>
            </div>
        </div>
    </div>
</script>
<script>
    //本页日历逻辑、交互逻辑略微复杂，请后端开发人员开发时联系qq826327700
    var tableData = [], currentRow = {}
    layui.use(['jquery', 'table', 'laytpl', 'element', 'laypage'], function () {
        var table = layui.table, form = layui.form;
        $ = layui.$;
        var laytpl = layui.laytpl;
        var element = layui.element;
        var laypage = layui.laypage;

        var jsonData = @Html.Raw(listJson);
        if ($("#hidTableCount").val() == "0") {
            var jsonData = [];
        }
        for (var i = 0; i < jsonData.length; i++) {
            var tableOption = {
                elem: '#sell-table' + (i + 1)
                , skin: 'line'
                , limit: 100
                , data: jsonData[i].TicketList//数据
                , page: false //开启分页
                , cols: [[ //表头
                    { field: 'ProductNumber', title: '产品编号', sort: true }
                    , { field: 'TicketClassifyStr', title: '类别', }
                    , { field: 'ProductName', title: '产品名称', templet: '#nameTpl' }
                    , { field: 'ThemeName', title: '主题', }
                    , { field: 'CateName', title: '票种', }
                    , { field: 'Stock', title: '库存', sort: true }
                    , { field: 'PlayDate', title: '游玩日期', templet: '#dateTpl' }
                    , { field: 'Price', title: '单价', templet: '#priceTpl' }
                    , { field: 'Quantity', title: '购买数量', templet: '#countTpl', minWidth: 130 }
                    , { title: '操作', toolbar: '#tableTool', minWidth: 80 }
                ]]
            }

            //所获得的 tableIns 即为当前容器的实例
            var tableIns = table.render(tableOption);
            table.on('tool(table)', function (obj) {
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的DOM对象
                //展开详情
                if (layEvent == 'detail') {
                    if (!tr.next().hasClass('tr-detail')) {
                        var detailTpl = detail.innerHTML
                        laytpl(detailTpl).render(data, function (html) {
                            tr.after(html)
                        });
                    }
                }
                //显示购买详情
                else if (layEvent == 'showTip') {
                    var bodyTpl = drawerBodyTpl.innerHTML;
                    currentRow = data;
                    currentRow.Quantity = $("div .ui-counter[data-id='" + currentRow.ProductId + "']").find(":text").val();
                    if (currentRow.Stock <= 0 || currentRow.Stock < currentRow.Quantity) {
                        layer.msg("库存不足");
                        return false;
                    }
                    laytpl(bodyTpl).render(data, function (html) {
                        $('.drawer-body').html(html);
                    });
                    $('.ui-shade').addClass('show');
                    $('.ui-drawer').css('right', '0px');
                    $('.ui-shade').bind('mousewheel', function (e) {
                        e.preventDefault();
                    })
                    $('.ui-drawer').bind('mousewheel', function (e) {
                        e.preventDefault();
                    })
                }                 //打开日历
                else if (layEvent == 'openCalendar') {
                    var calendar = new common.uiCalendar();
                    calendar.init({
                        id: data.ProductId,//本次打开日历的标识符，用于返回选择结果后的下一步操作 这里示例使用了表格行的编号作为标识符
                        currentDate: data.PlayDate,//默认月份
                        loading: '正在获取价格数据',//请求后端价格数据时的loading文字，默认不显示
                        httpUrl: '@Url.Action("GetTicketPrice", "ProductForTicket")' + "?productid=" + data.ProductId + '&date={d}',//价格数据接口 其中{d}为日期参数 如2018-4-18，表示获取2018年4月的价格数据
                        objectName: 'data',//获取数据后，哪个字段名为数据主体 默认data
                        dateField: 'PlayDate',//数据主体中哪个字段名表示日期 默认date
                        priceField: 'Price',//数据主体中哪个字段名表示价格 默认price
                        stockField: 'Stock',//数据中体中哪个字段名表示库存 默认stock
                        onSelect: function (res) {
                            obj.update({
                                PlayDate: res.fullDate,
                                Price: res.price,
                                Stock: res.stock
                            });
                        }
                    });
                }
            });
        }

        //查询事件
        $("#btnSearch").click(function () {
            var productName = $("#ProductName").val();
            var supplierName = $("#SupplierName").val();
            var productCode = $("#txtProductCode").val();
            var url = changeUrlParam("productName", productName, "");
            url = changeUrlParam("supplierName", supplierName, url);
            url = changeUrlParam("productCode", productCode, url);
            window.location.href = url;
        });

        //select 选择事件
        form.on("select", function (data) {
            var url = changeUrlParam("supplierType", data.value,"");
            window.location.href = url;
        });

        //checkbox  点击事件
        $("div.ui-form").on("click", ":checkbox", function () {
            var id = $(this).val();
            var urlParam = "";
            var param = getUrlParms($(this).attr("name"));
            if ($(this).prop("checked") == true) {//勾选
                if (param == null) {
                    urlParam = $(this).attr("name") + "=" + id;
                }
                else {
                    if (param != "") {
                        urlParam = $(this).attr("name") + "=" + param + "_" + id;
                    }
                    else {
                        urlParam = $(this).attr("name") + "=" + id;
                    }
                }
            }
            else {//取消勾选
                var arr = param.split('_');
                urlParam = $(this).attr("name") + "=";
                for (var i = 0; i < arr.length; i++) {
                    if (arr[i] != id) {
                        urlParam += arr[i];
                        if (i != arr.length - 1) {
                            urlParam += "_";
                        }
                    }
                }
            }

            var regex = new RegExp($(this).attr("name") + "[^\\?&]*");
            if (regex.test(window.location.href)) {
                window.location.href = window.location.href.replace(regex, urlParam);
            }
            else {
                if (window.location.href.indexOf("?") > -1) {
                    window.location.href = window.location.href + "&" + urlParam;
                }
                else {
                    window.location.href = window.location.href + "?" + urlParam;
                }
            }
        });

        //点击遮罩层，关闭预定详情右侧栏
        $("div.ui-shade").click(function (e) {
            cancel();
        })

        //分页
        var count =@(ViewBag.ReCount);
        var limit =@(ViewBag.Limit);
        var curr =@(ViewBag.Page);
        laypage.render({
            elem: 'page'
            , curr: curr
            , count: count
            , limit: limit
            , limits:[2,5,10,20]
            , layout: ['count', 'prev', 'page', 'next', 'limit', 'refresh', 'skip']
            , jump: function (obj, first) {
                if (!first) {
                    var limit = obj.limit;
                    var curr = obj.curr;
                    var url = changeUrlParam("Limit", limit, "");
                    url = changeUrlParam("Page", curr, url);
                    window.location.href = url;
                }
            }
        });
    });

    //关闭表格中的详情
    function closeDetail(e) {
        $(e).parents('tr').remove()
    }
    //关闭预定详情右侧栏
    function cancel(e) {
        $('.ui-shade').removeClass('show')
        $('.ui-drawer').css('right', '-260px')
    }
    //提交订单
    var isSubmit = true;
    function submit(e) {
        if (isSubmit){
        //所选产品信息 可用window.location拼接参数跳转到下一页
        console.log(currentRow)
        var postData = {};
        postData.Quantity = currentRow.Quantity;
        postData.ProductId = currentRow.ProductId
        postData.TotalAmount = currentRow.Quantity * currentRow.Price
        postData.Schedule = currentRow.PlayDate;
        $.ajax({
            url: "@Url.Action("SaveTicketOrder", "ProductForTicket")",
            type: "post",
            data: postData,
            beforeSend: function () {
                isSubmit = false;
                $(e).text("正在提交…")
            },
            success: function (res) {
                if (res.IsSuccess) {
                    var orderid = res.Data.split(",")[0];
                    window.location.href = "@Url.Action("OrderPay", "ProductForTicket", new { area = "Sale" })" + "?id=" + orderid;
                } else {
                    layer.msg(res.Info, {
                        icon: 2
                    });
                }
            }, complete: function () {
                isSubmit = true;
                $(e).text(" 提交订单")
            }
        });
      }
    };

    //接受counter的变化
    window.counter = function (data) {
        console.log(data);
        tableData.forEach(function (item) {
            if (item.ProductId == data.id) {
                item.Quantity = data.value
            }
        });
    }

    //获得地址栏参数
    function getUrlParms(name) {
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
        var r = window.location.search.substr(1).match(reg);
        if (r != null)
            return unescape(r[2]);
        return null;
    }

    //修改Url
    function changeUrlParam(name, value, url) {
        if (url == null || url == "" || url == undefined) {
            url = window.location.href;
        }

        var regex = new RegExp(name + "[^\\?&]*");
        var urlParam = name + "=" + value;
        if (regex.test(url)) {
            return url.replace(regex, urlParam);
        }
        else
        {
            if (url.indexOf('?') > -1) {
                return url + "&" + urlParam;
            }
            return url + "?" + urlParam;
        }
    }
</script>