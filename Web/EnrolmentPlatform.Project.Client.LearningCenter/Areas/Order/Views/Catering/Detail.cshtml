@{
    ViewBag.Title = "餐饮订单详情";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model OrderDetailForCateringDTO
<div class="main-wrap catering-detail">
    <div class="panel">
        <div class="panel-title flex">
            <div>
                <span>
                    订单状态：
                    <span style="color:red">@EnumDescriptionHelper.GetDescription((OrderStatusForCateringEnum)Model.OrderBasic.OrderStatus)</span>
                </span>
                @{
                    int n = Model.OrderForCatering.EndExpiryDate.Subtract(DateTime.Today.Date).Days;
                    if (n >= 0)
                    {
                        <span>将于@(n.ToString())天过期</span>
                    }
                    else
                    {
                        <span>已过期</span>
                    }
                }
            </div>
            <div>
                @if (Model.OrderBasic.OrderStatus == (int)OrderStatusForCateringEnum.Refunding&& Model.OrderBasic.CancelForSystem == (int)CancelForSystemEnum.Consumer)
                {
                    <button class="layui-btn layui-btn-sm layui-btn-warm" id="button2">处理退款</button>
                }
                @if (Model.OrderBasic.OrderStatus == (int)OrderStatusForCateringEnum.UnConsume)
                {
                    <button class="layui-btn layui-btn-sm layui-btn-warm" id="button3">发起退款</button>
                }
                @if (Model.OrderBasic.OrderStatus == (int)OrderStatusForCateringEnum.Unpaid)
                {
                    <button class="layui-btn layui-btn-sm layui-btn-warm" id="button1">改价</button>
                }
                
            </div>
        </div>
    </div>
    <div class="panel">
        <div class="panel-title">消费券号（到店凭券号或二维码均可完成消费）</div>
        <div class="panel-body flex">
            <div class="ticket-list">
                @if (Model.VerificationForCateringList != null && Model.VerificationForCateringList.Any())
                {
                    foreach (var item in Model.VerificationForCateringList)
                    {
                        <div class="ticket-item flex">
                            <div class="number">消费券号：@item.CateringToken</div>
                            <div class="status pro-color">[@(EnumDescriptionHelper.GetDescription((CateringVerificationStatusEnum)item.Status))]</div>
                        </div>
                    }
                }
            </div>
            <div class="img-box">
                <img style="width:200px;height:200px" layer-src="@Url.Action("GetRQCode", "RQCode", new { Area = "", content = Model.OrderForCatering.UnifiedCheckCode })" src="@Url.Action("GetRQCode", "RQCode", new { Area = "", content = Model.OrderForCatering.UnifiedCheckCode })" alt="@Model.OrderForCatering.UnifiedCheckCode">
            </div>
        </div>
    </div>
    <div class="panel">
        <div class="panel-title">
            订单信息
        </div>
        <div class="panel-body">
            <div class="info-cell no-padding">
                <div class="row row-3">
                    <div class="item">
                        <span class="label">订单号</span>
                        <span class="text">@Model.OrderBasic.OrderNo</span>
                    </div>
                    <div class="item">
                        <span class="label">下单时间</span>
                        <span class="text">@Model.OrderBasic.CreatorTime.ToDateTimeString()</span>
                    </div>
                </div>
                @{
                    var bill = Model.OrderBillList.Where(t => t.PayStatus == (int)BillPayStatusEnum.Paid && t.PayClassify == (int)TransactionClassifyEnum.Payment).FirstOrDefault();
                }
                <div class="row row-3">
                    <div class="item">
                        <span class="label">付款日期</span>
                        <span class="text">@(bill != null ? bill.LastModifyTime.ToDateTimeString() : "")</span>
                    </div>
                    <div class="item">
                        <span class="label">订单总金额</span>
                        <span class="text pro-color">￥@(Model.OrderBasic.ActualAmount.ToDouble())</span>
                    </div>
                </div>
                <div class="row row-3">
                    @{

                        if (bill != null)
                        {
                            <div class="item">
                                <span class="label">付款方式</span>
                                <span class="text">@EnumDescriptionHelper.GetDescription((OrderPayStatusEnum)bill.PayStatus)</span>
                            </div>
                            <div class="item">
                                <span class="label">交易流水号</span>
                                <span class="text">@bill.TranscationNo</span>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="panel">
        <div class="panel-title"></div>
        <div class="panel-body">
            <table class="layui-table">
                <thead>
                    <tr>
                        <th>项目</th>
                        <th>单价</th>
                        <th>数量</th>
                        <th>总价</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <p>@Model.OrderForCatering.ProductName</p>
                            <img src="@Model.ProductPhoto" alt="">
                        </td>
                        <td>￥@Model.OrderForCatering.Price.ToString("#0.00")</td>
                        <td>@Model.OrderForCatering.Quantity.ToString()</td>
                        <td class="pro-color">￥@Model.OrderForCatering.SubTotalPrice.ToString("#0.00")</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    @if (Model.OrderProcessList != null && Model.OrderProcessList.Any())
    {
        var orderRefund = Model.OrderProcessList.Where(t => t.ProcessClassify == 2).OrderByDescending(t => t.CreatorTime).ToList();
        if (orderRefund != null && orderRefund.Any())
        {
            <div class="panel">
                <div class="panel-title">
                    退款信息
                </div>
                <div class="panel-body">
                    <ul class="layui-timeline">
                        <li class="layui-timeline-item">
                            <i class="layui-icon layui-timeline-axis"></i>
                            <div class="layui-timeline-content layui-text">
                                <h3 class="layui-timeline-title">退款申请</h3>
                                @foreach (var item in orderRefund)
                                {
                                    <p>
                                        @if (!(!string.IsNullOrWhiteSpace(item.Remark) && item.Remark.Contains("不同意")))
                                        {
                                            <br>@Html.Raw("退款金额：" + item.Amount.ToDouble())
                                        }

                                        <br>操作类型：@item.ProcessName
                                        @if (!(!string.IsNullOrWhiteSpace(item.Remark) && item.Remark.Contains("不同意")))
                                        {
                                            <br>@Html.Raw("退款方式：原路返回")
                                        }

                                        <br>操作时间：@item.CreatorTime.ToDateTimeString()
                                        @if (!(!string.IsNullOrWhiteSpace(item.ProcessName) && item.ProcessName.Contains("申请")))
                                        {
                                            <br>@Html.Raw("处理结果：" + @item.Remark)
                                        }
                                    </p>
                                }
                            </div>
                        </li>

                    </ul>
                </div>
            </div>
        }
    }

    <div class="panel">
        <div class="panel-title">
            操作日志
        </div>
        <div class="panel-body">
            <table class="layui-table">
                <colgroup>
                    <col width="200">
                    <col>
                    <col width="200">
                    <col width="200">
                </colgroup>
                <thead>
                    <tr>
                        <th>操作类型</th>
                        <th>操作内容</th>
                        <th>操作人</th>
                        <th>操作时间</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.OrderProcessList != null && Model.OrderProcessList.Any())
                    {
                        foreach (var item in Model.OrderProcessList)
                        {
                            <tr>
                                <td>@item.ProcessName</td>
                                <td>@item.Remark</td>
                                <td>@item.CreatorAccount</td>
                                <td>@item.CreatorTime.ToDateTimeString()</td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- 改价 -->
<div id="button1-modal" style="display:none">
    <div class="layui-form">
        <div class="layui-form-item ">
            <label class="layui-form-label">订单原金额</label>
            <div class="layui-input-block">
                <span class="text pro-color">￥@(Model.OrderBasic.UpdateTotalAmount.ToDouble())</span>
            </div>
        </div>
        <div class="layui-form-item ">
            <label class="layui-form-label">修改后金额</label>
            <div class="layui-input-inline">
                <input type="text" id="txt_OrderPrice" name="price" required autocomplete="off" class="layui-input">
            </div>
            <span class="after-input">元</span>
        </div>
    </div>
</div>
<!-- 弹出框 处理退款 -->
<div id="button2-modal" style="display:none">
    <div class="layui-form big-label">
        <div class="layui-form-item ">
            <label class="layui-form-label">订单金额</label>
            <div class="layui-input-block">
                <span class="text pro-color">￥@(Model.OrderBasic.ActualAmount.ToDouble())</span>
            </div>
        </div>
        <div class="layui-form-item ">
            <label class="layui-form-label">处理结果</label>
            <div class="layui-input-inline">
                <input type="radio" name="modal3_IsAgree" value="true" lay-filter="modal3_IsAgree" title="同意" checked>
                <input type="radio" name="modal3_IsAgree" value="false" lay-filter="modal3_IsAgree" title="拒绝">
            </div>
        </div>
        <div class="layui-form-item" id="div_RefundAmount">
            <label class="layui-form-label">实际退款金额</label>
            <div class="layui-input-inline flex">
                <span class="pro-color">￥</span>
                <input type="text" name="price" id="modal3_RefundAmount" value="@(Model.OrderBasic.ActualAmount.ToDouble())" required autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item ">
            <label class="layui-form-label">处理结果说明</label>
            <div class="layui-input-inline">
                <textarea name="desc" placeholder="请输入内容" id="modal3_Remark" class="layui-textarea" style="width:300px;"></textarea>
            </div>
        </div>
    </div>
</div>
<!-- 发起退款 -->
<div id="button3-modal" style="display:none">
    <div class="layui-form big-label">
        <div class="layui-form-item" style="margin-top:10px;">
            <label class="layui-form-label">退款原因</label>
            <div class="layui-input-inline">
                <select name="express" id="select_CancelReason" lay-verify="required">
                    <option value="">请选择</option>
                    @foreach (var item in EnumDescriptionHelper.GetAllItemValueList<SupplierCancleOrderReasonEnum, int>())
                    {
                        <option value="@item.Value">@item.Value</option>
                    }
                </select>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">退款金额</label>
            <div class="layui-input-inline">
                <input type="text" name="" class="layui-input" disabled="disabled" value="￥@(Model.OrderBasic.ActualAmount.ToDouble())">
            </div>
        </div>
        <div class="layui-form-item ">
            <label class="layui-form-label">说明</label>
            <div class="layui-input-inline">
                <textarea name="desc" placeholder="请输入内容" id="txt_Remark" class="layui-textarea" style="width:300px;"></textarea>
            </div>
        </div>
    </div>
</div>
<script>
    var _IsSubmit = false;
    layui.use(['jquery', 'table', 'layer', "form"], function () {
        var form = layui.form;
        var $ = layui.$;
        var layer = layui.layer;

        layer.photos({
            photos: '#layer-photos-demo'
            , anim: 5
            , name: ''
            , title: false
            , area: ['260px', '260px'],
        });
        $("#button1").click(function () {
            layer.open({
                type: 1,
                title: '修改价格',
                btn: ['确定', '取消'],
                //skin: 'layui-layer-rim', //加上边框
                area: ['500px'], //宽高
                content: $('#button1-modal'),
                yes: function () {
                    return UpdateOrderPrice()
                },
                btn2: function () {

                }
            });
        })

        $("#button2").click(function () {
            layer.open({
                type: 1,
                title: '退款处理',
                btn: ['确定', '取消'],
                //skin: 'layui-layer-rim', //加上边框
                area: ['500px'], //宽高
                content: $('#button2-modal'),
                yes: function () {
                    return SupplierHandleRefund()
                },
                btn2: function () {

                }
            });
        })

        $("#button3").click(function () {
            layer.open({
                type: 1,
                title: '发起退款',
                btn: ['确定', '取消'],
                //skin: 'layui-layer-rim', //加上边框
                area: ['500px'], //宽高
                content: $('#button3-modal'),
                yes: function () {
                    return SupplierRefund()
                },
                btn2: function () {

                }
            });
        })


            //修改订单价格
        function UpdateOrderPrice()
        {
            var bool = false;
            var orderId = '@(Model.OrderBasic.Id.ToString())';
            var updateTotalAmount = $("#txt_OrderPrice").val();
            var regex = /^\d{1,16}(\.\d{1,2})?$/;
            if (!regex.test(updateTotalAmount)) {
                layer.msg('金额格式不正确', {
                    icon: 2
                    , time: 2000
                });
                return false;
            }
            if (!_IsSubmit)
            {
                $.ajax({
                        url: "@Url.Action("SupplierUpdatePrice", "Catering")",
                        type: "post",
                        data: { OrderId: orderId, UpdateTotalAmount: updateTotalAmount },
                        beforeSend: function () {
                            _IsSubmit = true;
                        },
                        success: function (res) {
                            bool = res.IsSuccess;
                            if (res.IsSuccess) {
                                layer.msg("修改成功", {
                                            icon: 1
                                            , time: 2000
                                }, function () {
                                    layer.closeAll();
                                                location.reload();
                                    });

                            }
                            else {
                                layer.msg(res.Info, {
                                    icon: 2
                                    , time: 2000
                                });
                            }
                            _IsSubmit = false;
                        }
                });
                return bool;
            }
    }
    //供应商退款
    function SupplierRefund()
    {
        var bool = false;
        var orderId = '@(Model.OrderBasic.Id.ToString())';
        var refundReason = $("#select_CancelReason").val();
        var remark = $("#txt_remark").val();
        if (refundReason=="") {
            layer.msg('请选择退款原因', {
                icon: 2
                , time: 2000
            });
            return false;
        }

        if (!_IsSubmit)
        {
            $.ajax({
                    url: "@Url.Action("SupplierRefund", "Catering")",
                    type: "post",
                    data: { OrderId: orderId, RefundReason: refundReason, Remark: remark},
                    beforeSend: function () {
                        _IsSubmit = true;
                    },
                    success: function (res) {
                        bool = res.IsSuccess;
                        if (res.IsSuccess) {
                            layer.msg("申请退款成功，等待平台审核", {
                                        icon: 1
                                        , time: 2000
                            }, function () {
                                layer.closeAll();
                                location.reload();
                                });

                        }
                        else {
                            layer.msg(res.Info, {
                                icon: 2
                                , time: 2000
                            });
                        }
                        _IsSubmit = false;
                    }
            });
            return bool;
        }
    }
        //供应商处理退款
    function SupplierHandleRefund()
    {
        var bool = false;
        var orderId = '@(Model.OrderBasic.Id.ToString())';
        var isAgree = $("input[name='modal3_IsAgree']:checked").val();
        var refundAmount = $("#modal3_RefundAmount").val();
        var remark = $("#modal3_Remark").val();
        var regex = /^\d{1,16}(\.\d{1,2})?$/;
        if (isAgree == "true") {
            if (!regex.test(refundAmount)) {
                layer.msg('请输入退款金额', {
                    icon: 2
                    , time: 2000
                });
                return false;
            }
        }
        else {
            refundAmount = 0;
        }
        if (!_IsSubmit)
        {
            $.ajax({
                    url: "@Url.Action("SupplierHandleRefund", "Catering")",
                    type: "post",
                    data: { OrderId: orderId, IsAgree: isAgree, RefundAmount: refundAmount , Remark: remark},
                    beforeSend: function () {
                        _IsSubmit = true;
                    },
                    success: function (res) {
                        bool = res.IsSuccess;
                        if (res.IsSuccess) {
                            layer.msg("操作成功", {
                                        icon: 1
                                        , time: 2000
                            }, function () {
                                layer.closeAll();
                                location.reload();
                                });

                        }
                        else {
                            layer.msg(res.Info, {
                                icon: 2
                                , time: 2000
                            });
                        }
                        _IsSubmit = false;
                    }
            });
            return bool;
        }
    }
    
    form.on('radio(modal3_IsAgree)', function (data) {
            if (data.value == "false") {
                $("#modal3_RefundAmount").val('');
                $("#div_RefundAmount").css("display", "none");
            }
            else {
                $("#div_RefundAmount").css("display", "block");

            }
        });
    });


</script>