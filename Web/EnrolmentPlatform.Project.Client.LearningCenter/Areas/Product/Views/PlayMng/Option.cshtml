
@{
    ViewBag.Title = "游玩项目编辑";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var scenicRange = ViewBag.ScenicRange as List<KeyValuePair<int, string>>;
}
@model OptionParamForPlayMngDataDto

<style type="text/css">
    .layui-form-label > em { color: #f00; font-style: normal; padding: 0 5px; }
    .layui-form-label { width: 100px !important; }
</style>
<div class="main-wrap play-add-style">
    <div class="panel">
        <div class="panel-body">
            <div class="layui-form">
                <div class="layui-form-item input-inline-400">
                    <label class="layui-form-label"><em>*</em>游乐项目名称</label>
                    <div class="layui-input-inline">
                        <input type="hidden" id="PlayId" value="@Model.Id" />
                        <input type="hidden" id="ScenicSpotIdStr" value="@(Model!=null?Model.ScenicSpotIdStr:"")" />
                        <input type="hidden" id="ScenicSpotNameStr" value="@(Model!=null?Model.ScenicSpotNameStr:"")" />
                        <input type="text" placeholder="游乐项目名称" name="ProjectName" id="ProjectName" value="@(Model!=null?Model.ProjectName:"")" required lay-verify="required" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-form-item input-inline-400">
                    <label class="layui-form-label"><em>*</em>所在地址</label>
                    <div class="layui-input-inline">
                        <input type="text" name="Address" value="@(Model!=null?Model.Address:"")" id="Address" required lay-verify="required" autocomplete="off" placeholder="请输入地址然后获取位置" class="layui-input">
                    </div>
                    <button class="layui-btn layui-btn-warm" onclick="baiduMap();">获取位置</button>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label"><em>*</em>开放时间</label>
                    <div class="layui-input-inline" style="width: 80px;">
                        <select id="opentime_h" lay-verify="required">
                            @for (int i = 0; i < 24; i++)
                            {
                                if (Model != null && !string.IsNullOrWhiteSpace(Model.OpenTime) && int.Parse(Model.OpenTime.Split(':')[0]) == i)
                                {
                                    <option selected="selected" value="@(i < 10 ? "0" + i.ToString() : i.ToString())">@(i < 10 ? "0" + i.ToString() : i.ToString())时</option>
                                }
                                else
                                {
                                    <option value="@(i < 10 ? "0" + i.ToString() : i.ToString())">@(i < 10 ? "0" + i.ToString() : i.ToString())时</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="layui-input-inline" style="width: 80px;">
                        <select id="opentime_m" lay-verify="required">
                            @for (int i = 0; i < 60; i++)
                            {
                                if (Model != null && !string.IsNullOrWhiteSpace(Model.OpenTime) && int.Parse(Model.OpenTime.Split(':')[1]) == i)
                                {
                                    <option selected="selected" value="@(i < 10 ? "0" + i.ToString() : i.ToString())">@(i < 10 ? "0" + i.ToString() : i.ToString())分</option>
                                }
                                else
                                {
                                    <option value="@(i < 10 ? "0" + i.ToString() : i.ToString())">@(i < 10 ? "0" + i.ToString() : i.ToString())分</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="layui-form-mid">-</div>
                    <div class="layui-input-inline" style="width: 80px;">
                        <select id="closetime_h" lay-verify="required">
                            @for (int i = 0; i < 24; i++)
                            {
                                if (Model != null && !string.IsNullOrWhiteSpace(Model.CloseTime) && int.Parse(Model.CloseTime.Split(':')[0]) == i)
                                {
                                    <option selected="selected" value="@(i < 10 ? "0" + i.ToString() : i.ToString())">@(i < 10 ? "0" + i.ToString() : i.ToString())时</option>
                                }
                                else
                                {
                                    <option value="@(i < 10 ? "0" + i.ToString() : i.ToString())">@(i < 10 ? "0" + i.ToString() : i.ToString())时</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="layui-input-inline" style="width: 80px;">
                        <select id="closetime_m" lay-verify="required">
                            @for (int i = 0; i < 60; i++)
                            {
                                if (Model != null && !string.IsNullOrWhiteSpace(Model.CloseTime) && int.Parse(Model.CloseTime.Split(':')[1]) == i)
                                {
                                    <option selected="selected" value="@(i < 10 ? "0" + i.ToString() : i.ToString())">@(i < 10 ? "0" + i.ToString() : i.ToString())分</option>
                                }
                                else
                                {
                                    <option value="@(i < 10 ? "0" + i.ToString() : i.ToString())">@(i < 10 ? "0" + i.ToString() : i.ToString())分</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="layui-form-item">
                    <label class="layui-form-label"><em>*</em>地址坐标</label>
                    <div class="layui-input-inline">
                        <input type="text" id="Coordinate" name="Coordinate" value="@(Model!=null&&!string.IsNullOrEmpty(Model.Coordinate)?Model.Coordinate:"0,0")" required lay-verify="required" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-form-item">
                    <label class="layui-form-label"></label>
                    <div class="layui-input-inline" id="allmap" style="height:400px; width:80%;">
                    </div>
                </div>
                <div class="layui-form-item">
                    <label class="layui-form-label"><em>*</em>景点范围</label>
                    <div class="layui-input-block">
                        @foreach (var item in scenicRange)
                        {
                            <input lay-filter="scenicRange" type="radio" @(item.Key.Equals(!Model.Id.Equals(Guid.Empty) ? Model.ScenicRange : (int)StatusForScenicRangeEnum.In) ? "checked=checked" : "") name="scenicRange" value="@item.Key" title="@item.Value">
                        }
                    </div>
                </div>
                <div class="layui-form-item @((Model.Id.Equals(Guid.Empty)|| Model.ScenicRange.Equals((int)StatusForScenicRangeEnum.In)) ? "layui-hide" : "")" id="Spot_Div">
                    <label class="layui-form-label">包含景点</label>
                    <div class="layui-input-block" id="scenicSpot">
                        @if (Model.OptionParamForKeyValueDto != null && Model.OptionParamForKeyValueDto.Any())
                        {
                            foreach (var item in Model.OptionParamForKeyValueDto)
                            {
                                <div class="layui-btn-group" temp_i="@(item.Id)" temp_v="@(item.Value)">
                                    <button class="layui-btn layui-btn-primary layui-btn-sm">@(item.Value)</button>
                                    <button class="layui-btn layui-btn-primary layui-btn-sm" onclick="deleteSpot(this)"><i class="layui-icon"></i></button>
                                </div>
                            }
                        }
                        <button type="button" class="layui-btn layui-btn-sm" id="btn">
                            <i class="layui-icon"></i> 添加
                        </button>
                    </div>
                </div>
                <div class="layui-form-item">
                    <label class="layui-form-label"><em>*</em>游乐项目图片</label>
                    <div class="layui-input-block">
                        <button type="button" class="layui-btn layui-btn-primary" id="upload">批量上传图片</button>
                        <span>（图片格式为jpg/png/bmp，最大为2M，至少上传一张，最多10张。）</span>
                        <div class="upload-img-box" style="margin-left:20px;">
                            @if (Model.OptionParamForPictureDto != null && Model.OptionParamForPictureDto.Any())
                            {
                                foreach (var item in Model.OptionParamForPictureDto)
                                {
                                    <div class="img-item">
                                        <div class="cover @(item.Iscover ? "show" : "")">
                                            <span onclick="setPic(this)">@(item.Iscover ? "主图" : "设为主图")</span>
                                            <span class="layui-icon" onclick="deletePic(this)">ဇ</span>
                                        </div>
                                        <img src="@item.FilePath" alt="">
                                        <input type="text" value="@(item.FileName)" class="img-name" placeholder="图片名称">
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label"><em>*</em>预订须知</label>
                    <div class="layui-input-block" style="width:800px;">
                        <textarea class="layui-textarea" id="OrderNotes" name="OrderNotes" style="resize:none;">@(Html.Raw(Model!=null?Model.OrderNotes:""))</textarea>
                    </div>
                </div>
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label"><em>*</em>详情介绍</label>
                    <div class="layui-input-block" style="width:800px;">
                        <textarea class="layui-textarea" id="Description" name="Description" style="resize:none;">@(Html.Raw(Model!=null?Model.Description : ""))</textarea>
                    </div>
                </div>
                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label"><em>*</em>交通指南</label>
                    <div class="layui-input-block" style="width:800px;">
                        <textarea class="layui-textarea" id="TrafficGuide" name="TrafficGuide" style="resize:none;">@(Html.Raw(Model!=null?Model.TrafficGuide : ""))</textarea>
                    </div>
                </div>
                <div class="layui-form-item">
                    <label class="layui-form-label"></label>
                    <div class="layui-input-block">
                        <button class="layui-btn" lay-submit="" lay-filter="saveBasicInfo">提交</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 弹出框 -->
<div id="add-spec-modal" style="display:none">
    <div class="layui-form  margin-top-30">
        <div class="layui-form-item">
            <label class="layui-form-label">景点名称</label>
            <div class="layui-input-inline">
                <input type="text" id="add-spec-name" name="name" required autocomplete="off" class="layui-input">
            </div>
            <button class="layui-btn layui-btn-warm" data-type="reload">查询</button>
        </div>
    </div>
    <table id="spot-table" lay-filter="table"></table>
</div>

<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=@(System.Configuration.ConfigurationManager.AppSettings["BaiDuAK"])"></script>
@section scripts{
    @Html.RenderTextAreaEditorScripts()

    <script>

        var defaltGuid = "@(Guid.Empty)";
        var isSubmit = true;
        var addUrl = '@Url.Action("SavePlay", "PlayMng", new { area = "Product" })';
        var editUrl = '@Url.Action("ModifyPlay", "PlayMng", new { area = "Product" })';
        var homeUrl = '@Url.Action("Index", "PlayMng", new { area = "Product" })';
        var searchUrl = '@Url.Action("GetScenicSportForList", "PlayMng", new { area = "Product" })';
        var rangeIn = "@((int)StatusForScenicRangeEnum.In)";

        var orderNotes, description, trafficGuide;
        $("#OrderNotes").createEditor({ width: "90%", height: 300, imageUploadLimit: 10 }, function (e) {
            orderNotes = e;
        });

        $("#Description").createEditor({ width: "90%", height: 300, imageUploadLimit: 10 }, function (e) {
            description = e;
        });

        $("#TrafficGuide").createEditor({ width: "90%", height: 300, imageUploadLimit: 10 }, function (e) {
            trafficGuide = e;
        });

        $("#upload").click(function () {
            var img_len = $(".upload-img-box .img-item").length;
            if (img_len >= 10) { 
                layer.msg("最多上传10张图片");
            } else {
                orderNotes.loadPlugin('multiimage', function () {
                    orderNotes.plugin.multiImageDialog({
                        showRemote: false,
                        clickFn: function (urlList) {
                            if (urlList.length > 10 - img_len) {
                                layer.msg("最多上传10张图片");
                                return false;
                            } else {
                                $.each(urlList, function (i, data) {
                                    LoadImgBox(data.url);
                                });
                                orderNotes.hideDialog();
                            }
                        }
                    });
                });
                //orderNotes.loadPlugin('image', function () {
                //    orderNotes.plugin.imageDialog({
                //        showRemote: false,
                //        clickFn: function (url, title, width, height, border, align) {
                //            LoadImgBox(url);
                //            orderNotes.hideDialog();
                //        }
                //    });
                //});
            }
        });

        //加载图片
        function LoadImgBox(url, type) {
            var html = "<div class=\"img-item\">";
            html += "<div class=\"cover\">";
            html += "<span onclick=\"setPic(this)\">设为主图</span>";
            html += "<span class=\"layui-icon\" onclick=\"deletePic(this)\">ဇ</span>";
            html += "</div><img src=\"" + url + "\" alt=\"\">";
            html += "<input type=\"text\" value=\"\" class=\"img-name\" placeholder=\"图片名称\"></div>";
            $(".upload-img-box").append(html);
        }
        //移除图片
        function deletePic(_this) {
            $(_this).parents("div[class='img-item']").remove();
        }

        //设为主图
        function setPic(_this) {
            var isZhutu = $.trim($(_this).text()) == "设为主图";
            $(".upload-img-box .img-item").each(function () {
                $(this).find("div").removeClass("show");
                $(this).find("span:eq(0)").text("设为主图");
            });
            if (isZhutu) {
                $(_this).text("主图");
                $(_this).parent().addClass("show");
            } else {
                $(_this).text("设为主图");
                $(_this).parent().removeClass("show");
            }
        }


        //加载景点
        function LoadSpotBox(id, val) {
            if ($("#scenicSpot>div[temp_i='" + id + "']").length <= 0) {
                var html = "<div class=\"layui-btn-group\" temp_i=\"" + id + "\" temp_v=\"" + val + "\">";
                html += "<button class=\"layui-btn layui-btn-primary layui-btn-sm\">" + val + "</button>";
                html += "<button class=\"layui-btn layui-btn-primary layui-btn-sm\" onclick=\"deleteSpot(this)\"><i class=\"layui-icon\"></i></button></div>";
                $("#btn").before(html);
            }
        }
        //移除景点
        function deleteSpot(_this) {
            $(_this).parent().remove();
        }

        layui.use(['jquery', 'layedit', 'table', 'form'], function () {
            var $ = layui.$,active = {
                reload: function () {
                    //执行重载
                    table.reload('spot-table', {
                        page: {
                            curr: 1 //重新从第 1 页开始
                        }
                        , where: {
                            ScenicSportName: $.trim($('#add-spec-name').val()),
                        }
                    });
                }
            };

            var layedit = layui.layedit, form = layui.form, table = layui.table;

            $('#btn').click(function () {
                layer.open({
                    type: 1,
                    title: '选择游玩项目对应景点',
                    btn: ['确定', '取消'],
                    //skin: 'layui-layer-rim', //加上边框
                    area: ['800px', '500px'], //宽高
                    content: $('#add-spec-modal'),
                    yes: function (z_index) {
                        var checkStatus = table.checkStatus('spot-table')
                            , data = checkStatus.data;
                        if (data.length == 0) {
                            layer.msg("请勾选包含的景点");
                            return false;
                        }
                        for (var i = 0; i < data.length; i++) {
                            LoadSpotBox(data[i].Id, data[i].ScenicSportName);
                        }
                        layer.close(z_index);
                    },
                    btn2: function () {

                    }
                });

                //实例表格
                var tableOptions = {
                    elem: '#spot-table'
                    , skin: 'line'
                    , limit: 5
                    , limits: [5]
                    , url: searchUrl//数据
                    , page: true //开启分页
                    , cols: [[ //表头
                        { type: 'checkbox', fixed: 'left' }
                        , { field: 'ScenicSportName', title: '景点名称', width: 150, }
                        , { field: 'ScenicClassifyStr', title: '景点类型', width: 150, }
                        , { field: 'Address', title: '地址', width: 500 }
                    ]]
                }

                table.render(tableOptions);
            })

            //获取添加的图片
            function GetImgArr() {
                var img_value = [];
                $(".upload-img-box .img-item").each(function () {
                    var path = $(this).find("img").attr("src");
                    var filename = $(this).find(".img-name").val();
                    var iscover_temp = $.trim($(this).find("span:eq(0)").text()) != "设为主图";
                    var imgObj = { FilePath: path, FileName: filename, FileClassify: 1, ForeignKeyClassify: 5, Iscover: iscover_temp, IsFocus: "False" };
                    img_value.push(imgObj);
                });
                return img_value;
            }

            //获取添加的景点
            function GetSpotArr() {
                var idsArr = [];
                var idstr = "";
                var namestr = "";
                $("#scenicSpot>div").each(function () {
                    if (idsArr.indexOf($.trim($(this).attr("temp_i"))) < 0) {
                        idstr += ($.trim($(this).attr("temp_i")) + ",");
                        namestr += ($.trim($(this).attr("temp_v")) + ",");
                        idsArr.push($.trim($(this).attr("temp_i")));
                    }
                });
                $("#ScenicSpotIdStr").val(idstr);
                $("#ScenicSpotNameStr").val(namestr);
            }

            //切换景点范围
            form.on("radio(scenicRange)", function (data) {
                if (data.value == rangeIn) {
                    $("#Spot_Div").removeClass("layui-hide").addClass("layui-hide");
                } else {
                    $("#Spot_Div").removeClass("layui-hide");
                }
            });

            //提交
            form.on('submit(saveBasicInfo)', function (data) {
                GetSpotArr();
                $("#OrderNotes").val(orderNotes.html());
                $("#Description").val(description.html());
                $("#TrafficGuide").val(trafficGuide.html());
                if ($("input[name='scenicRange']:checked").val() != rangeIn) {
                    if ($("#ScenicSpotIdStr").val().length <= 10) {
                        layer.msg("请选择包含的景点");
                        return false;
                    }
                }
                if ($(".upload-img-box .img-item").length == 0) {
                    layer.msg("请上传一张图片");
                    return false;
                }
                if ($(".upload-img-box .img-item .show").length < 1) {
                    layer.msg("请设置一张图片为主图");
                    return false;
                }
                if ($.trim($("#OrderNotes").val()).length < 1) {
                    layer.msg("请填写预订须知");
                    return false;
                }
                if ($.trim($("#Description").val()).length < 1) {
                    layer.msg("请填写详情介绍");
                    return false;
                }
                if ($.trim($("#TrafficGuide").val()).length < 1) {
                    layer.msg("请填写交通指南");
                    return false;
                }

                var param = {
                    Id: $("#PlayId").val(),
                    ProjectName: $("#ProjectName").val(),
                    Address: $("#Address").val(),
                    Coordinate: $("#Coordinate").val(),
                    ScenicSpotIdStr: $("#ScenicSpotIdStr").val(),
                    ScenicSpotNameStr: $("#ScenicSpotNameStr").val(),
                    ScenicRange: $("input[name='scenicRange']:checked").val(),
                    OrderNotes: $("#OrderNotes").val(),
                    Description: $("#Description").val(),
                    TrafficGuide: $("#TrafficGuide").val(),
                    OpenTime: ($("#opentime_h").val() + ":" + $("#opentime_m").val()),
                    CloseTime: ($("#closetime_h").val() + ":" + $("#closetime_m").val()),
                    OptionParamForPictureDto: GetImgArr()
                };
                var optionUrl = $("#PlayId").val() == defaltGuid ? addUrl : editUrl;
                if (isSubmit) {
                    isSubmit = false;
                    $.ajax({
                        url: optionUrl,
                        type: "post",
                        data: param,
                        dataType: "json",
                        success: function (res) {
                            isSubmit = true;
                            if (res.IsSuccess) {
                                layer.msg("保存成功", {
                                    icon: 1
                                    , time: 1000
                                }, function () {
                                    location.href = homeUrl;
                                });
                            } else {
                                layer.msg(res.Info, {
                                    icon: 2
                                    , time: 2000
                                });
                            }
                        },
                        complete: function () {
                            isSubmit = true;
                        }
                    });
                }
            });
        });

        // 百度地图API功能
        var Long_load = parseFloat("@(Model != null&& !string.IsNullOrEmpty(Model.Coordinate) ? Model.Coordinate.Split(',')[0] : "116.331398")").toFixed(6);
        var Lat_load = parseFloat("@(Model != null && !string.IsNullOrEmpty(Model.Coordinate) ? Model.Coordinate.Split(',')[1] : "39.897445")").toFixed(6);
        var fdjs = parseInt("@(Model != null ? 16 : 12)");
        var map = new BMap.Map("allmap");
        var point = new BMap.Point(Long_load, Lat_load);
        map.centerAndZoom(point, fdjs);
        setTimeout(function () {
            map.setZoom(16);
        }, 2000);  //2秒后放大到14级
        map.enableScrollWheelZoom(true);
        map.addOverlay(new BMap.Marker(point));
        var top_right_navigation = new BMap.NavigationControl({ anchor: BMAP_ANCHOR_TOP_RIGHT, type: BMAP_NAVIGATION_CONTROL_ZOOM });
        map.addControl(top_right_navigation);

        // 创建地址解析器实例
        var myGeo = new BMap.Geocoder();
        map.addEventListener("click", function (e) {
            var pt = e.point;
            map.clearOverlays();
            map.addOverlay(new BMap.Marker(pt));
            $("#Coordinate").val(pt.lng + "," + pt.lat);
            myGeo.getLocation(pt, function (rs) {
                var addComp = rs.addressComponents;
                $("#Address").val(addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber)
            });
        });

        function baiduMap() {
            var address = $.trim($("#Address").val());
            // 将地址解析结果显示在地图上,并调整地图视野
            myGeo.getPoint(address, function (point) {
                if (point) {
                    map.clearOverlays();
                    map.centerAndZoom(point, 16);
                    map.addOverlay(new BMap.Marker(point));
                    $("#Coordinate").val(point.lng + "," + point.lat);
                } else {
                    console.log("您选择地址没有解析到结果!");
                }
            });
        }
    </script>
}